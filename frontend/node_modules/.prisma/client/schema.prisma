generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id                  String  @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String  @unique
  password            String
  industry            String?
  interests           String?
  encryptedPrivateKey String
  iv                  String
  role                String  @default("user")
  walletAddress       String? @unique(map: "walletAddress_unique")
  walletBalance       Float   @default(0)

  transactions Transaction[]

  // Relations
  accounts Account[]
  sessions Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
}

model Account {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  userId        String  @db.ObjectId
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  session_state String?
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  amount    Float
  to        String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
