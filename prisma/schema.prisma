generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Session {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  amount    Float // ✅ Amount of the transaction
  type      String // ✅ Type (e.g., "deposit", "withdrawal")
  createdAt DateTime @default(now()) @map("createdAt") @db.Date // ✅ Timestamp

  // ✅ Explicitly name the relation
  user User @relation(name: "UserTransactions", fields: [userId], references: [id])

  @@index([userId])
  @@index([createdAt]) // ✅ Index for sorting transactions by date
}

model User {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt           DateTime @default(now()) @map("createdAt") @db.Date
  updatedAt           DateTime @updatedAt @map("updatedAt") @db.Date
  email               String   @unique
  encryptedPrivateKey String
  industry            String?
  interests           String?
  isAdmin             Boolean  @default(false)
  iv                  String
  name                String
  password            String
  role                String   @default("user")
  walletAddress       String?  @unique
  walletBalance       Float    @default(0)
  avatar              String?

  // ✅ Explicitly name the relation
  transactions Transaction[] @relation(name: "UserTransactions")
}

model VerificationToken {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String @unique
  token      String @unique

  @@unique([identifier, token])
}
