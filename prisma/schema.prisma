generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String   @unique
  password            String
  industry            String?   // Add this field for user industry
  interests           String?   // Add this field for user interests
  encryptedPrivateKey String   // Stores the encrypted wallet private key
  iv                  String   // Initialization vector for AES encryption
  role                String   @default("user") // Default role is 'user'

  // Relations
  accounts            Account[]
  sessions            Session[]

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  walletAddress       String?  @unique(map: "walletAddress_unique") // Optional wallet address
  walletBalance       Float    @default(0)
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @db.ObjectId
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  session_state     String?
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}